version: '3.8'

services:
  hfg-postgres:
    build: .
    ports:
      - "5051:5051"
    environment:
      - DB_USER=neondb_owner
      - DB_PASSWORD=Od9UnVJ2Wvfr
      - DB_HOST=ep-rapid-lake-a8yqbhfk.eastus2.azure.neon.tech
      - DB_NAME=neondb
      - DB_SSLMODE=require
    volumes:
      - .:/code
      - ./init-container/models:/models  # Adjust the path for model mounting
    depends_on:
      - db
    command: [""]  # Set default command as empty to allow passing commands via CLI
    networks:
      - my_network

  init-models:
    image: python:3.8
    volumes:
      - ./init-container/models:/models  # Ensure models are correctly mounted
      - ./init:/init  # Create a directory for initialization scripts
    working_dir: /init
    entrypoint: ["/bin/sh", "-c", "echo 'Init container started'; exec sleep 3600"]  # Keeps the container running
    networks:
      - my_network
      - init_model

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: neondb
      POSTGRES_USER: neondb_owner
      POSTGRES_PASSWORD: Od9UnVJ2Wvfr
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "neondb_owner"]
      interval: 10s
      timeout: 5s
      retries: 5      
    networks:
      - my_network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "80:80"
    depends_on:
      - db
    networks:
      - my_network

volumes:
  postgres_data:
networks:
  my_network:
  init_model: